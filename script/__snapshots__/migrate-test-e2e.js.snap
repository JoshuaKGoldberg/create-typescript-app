// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`expected file changes > .eslintignore 1`] = `
"--- a/.eslintignore
+++ b/.eslintignore
@@ ... @@
 !.*
-coverage*
+coverage
 lib
 node_modules
 pnpm-lock.yaml"
`;

exports[`expected file changes > .eslintrc.cjs 1`] = `
"--- a/.eslintrc.cjs
+++ b/.eslintrc.cjs
@@ ... @@
-/*
-👋 Hi! This ESLint configuration contains a lot more stuff than many repos'!
-You can read from it to see all sorts of linting goodness, but don't worry -
-it's not something you need to exhaustively understand immediately. 💙
-
-If you're interested in learning more, see the 'getting started' docs on:
-- ESLint: https://eslint.org
-- typescript-eslint: https://typescript-eslint.io
-*/
-
 /** @type {import("@types/eslint").Linter.Config} */
 module.exports = {
 	env: {
@@ ... @@ module.exports = {
 			rules: {
 				// These off-by-default rules work well for this repo and we like them on.
 				"deprecation/deprecation": "error",
-
-				// These more-strict-by-default rules don't work well for this repo and we like them less strict.
-				"@typescript-eslint/no-unnecessary-condition": [
-					"error",
-					{
-						allowConstantLoopConditions: true,
-					},
-				],
-				"@typescript-eslint/prefer-nullish-coalescing": [
-					"error",
-					{ ignorePrimitives: true },
-				],
 			},
 		},
 		{"
`;

exports[`expected file changes > .github/DEVELOPMENT.md 1`] = `
"--- a/.github/DEVELOPMENT.md
+++ b/.github/DEVELOPMENT.md
@@ ... @@ Add \`--watch\` to keep the type checker running in a watch mode that updates the
 \`\`\`shell
 pnpm tsc --watch
 \`\`\`
-
-## Setup Scripts
-
-As described in the \`README.md\` file and \`docs/\`, this template repository comes with three scripts that can set up an existing or new repository.
-
-Each follows roughly the same general flow:
-
-1. \`bin/index.ts\` uses \`bin/mode.ts\` to determine which of the three setup scripts to run
-2. \`readOptions\` parses in options from local files, Git commands, npm APIs, and/or files on disk
-3. \`runOrRestore\` wraps the setup script's main logic in a friendly prompt wrapper
-4. The setup script wraps each portion of its main logic with \`withSpinner\`
-   - Each step of setup logic is generally imported from within \`src/steps\`
-5. A call to \`outro\` summarizes the results for the user
-
-> **Warning**
-> Each setup script overrides many files in the directory they're run in.
-> Make sure to save any changes you want to preserve before running them.
-
-### The Creation Script
-
-> 📝 See [\`docs/Creation.md\`](../docs/Creation.md) for user documentation on the creation script.
-
-This template's "creation" script is located in \`src/create/\`.
-You can run it locally with \`node bin/index.js --mode create\`.
-Note that files need to be built with \`pnpm run build\` beforehand.
-
-#### Testing the Creation Script
-
-You can run the end-to-end test for creation locally on the command-line.
-Note that the files need to be built with \`pnpm run build\` beforehand.
-
-\`\`\`shell
-pnpm run test:create
-\`\`\`
-
-That end-to-end test executes \`script/create-test-e2e.js\`, which:
-
-1. Runs the creation script to create a new \`test-repository\` child directory and repository, capturing code coverage
-2. Asserts that commands such as \`build\` and \`lint\` each pass
-
-The \`pnpm run test:create\` script is run in CI to ensure that templating changes are in sync with the template's actual files.
-See \`.github/workflows/test-create.yml\`.
-
-### The Initialization Script
-
-> 📝 See [\`docs/Initialization.md\`](../docs/Initialization.md) for user documentation on the initialization script.
-
-This template's "initialization" script is located in \`src/initialize/\`.
-You can run it locally with \`pnpm run initialize\`.
-It uses [\`tsx\`](https://github.com/esbuild-kit/tsx) so you don't need to build files before running.
-
-\`\`\`shell
-pnpm run initialize
-\`\`\`
-
-#### Testing the Initialization Script
-
-You can run the end-to-end test for initializing locally on the command-line.
-Note that files need to be built with \`pnpm run build\` beforehand.
-
-\`\`\`shell
-pnpm run test:initialize
-\`\`\`
-
-That end-to-end test executes \`script/initialize-test-e2e.js\`, which:
-
-1. Runs the initialization script using \`--skip-github-api\` and other skip flags
-2. Checks that the local repository's files were changed correctly (e.g. removed initialization-only files)
-3. Runs \`pnpm run lint:knip\` to make sure no excess dependencies or files were left over
-4. Resets everything
-5. Runs initialization a second time, capturing test coverage
-
-The \`pnpm run test:initialize\` script is run in CI to ensure that templating changes are in sync with the template's actual files.
-See \`.github/workflows/test-initialize.yml\`.
-
-### The Migration Script
-
-> 📝 See [\`docs/Migration.md\`](../docs/Migration.md) for user documentation on the migration script.
-
-This template's "migration" script is located in \`src/migrate/\`.
-Note that files need to be built with \`pnpm run build\` beforehand.
-
-To test out the script locally, run it from a different repository's directory:
-
-\`\`\`shell
-cd ../other-repo
-node ../create-typescript-app/bin/migrate.js
-\`\`\`
-
-The migration script will work on any directory.
-You can try it out in a blank directory with scripts like:
-
-\`\`\`shell
-cd ..
-mkdir temp
-cd temp
-node ../create-typescript-app/bin/migrate.js
-\`\`\`
-
-#### Testing the Migration Script
-
-> 💡 Seeing \`Oh no! Running the migrate script unexpectedly modified:\` errors?
-> _[Unexpected File Modifications](#unexpected-file-modifications)_ covers that below.
-
-You can run the end-to-end test for migrating locally on the command-line:
-
-\`\`\`shell
-pnpm run test:migrate
-\`\`\`
-
-That end-to-end test executes \`script/migrate-test-e2e.js\`, which:
-
-1. Runs the migration script using \`--skip-github-api\` and other skip flags, capturing code coverage
-2. Checks that only a small list of allowed files were changed
-3. Checks that the local repository's files were changed correctly (e.g. removed initialization-only files)
-
-The \`pnpm run test:migrate\` script is run in CI to ensure that templating changes are in sync with the template's actual files.
-See \`.github/workflows/test-migrate.yml\`.
-
-> Tip: if the migration test is failing in CI and you don't see any errors, try [downloading the full logs](https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/using-workflow-run-logs#downloading-logs).
-
-##### Migration Snapshot Failures
-
-The migration test uses the [Vitest file snapshot](https://vitest.dev/guide/snapshot#file-snapshots) in \`script/__snapshots__/migrate-test-e2e.js.snap\` to store expected differences to this repository after running the migration script.
-The end-to-end migration test will fail any changes that don't keep the same differences in that snapshot.
-
-You can update the snapshot file by:
-
-1. Committing any changes to your local repository
-2. Running \`pnpm i\` and \`pnpm build\` if any updates have been made to the \`package.json\` or \`src/\` files, respectively
-3. Running \`pnpm run test:migrate -u\` to update the snapshot
-
-At this point there will be some files changed:
-
-- \`script/__snapshots__/migrate-test-e2e.js.snap\` will have updates if any files mismatched templates
-- The actual updated files on disk will be there too
-
-If the snapshot file changes are what you expected, then you can commit them.
-The rest of the file changes can be reverted.
-
-> [🚀 Feature: Add a way to apply known file changes after migration #1184](https://github.com/JoshuaKGoldberg/create-typescript-app/issues/1184) tracks turning the test snapshot into a feature.
-
-##### Unexpected File Modifications
-
-The migration test also asserts that no files were unexpectedly changed.
-If you see a failure like:
-
-\`\`\`plaintext
-Oh no! Running the migrate script unexpectedly modified:
- - ...
-\`\`\`
-
-...then that means the file generated from templates differs from what's checked into the repository.
-This is most often caused by changes to templates not being applied to checked-in files too.
-
-Templates for files are generally stored in [\`src/steps/writing/creation\`] under a path roughly corresponding to the file they describe.
-For example, the template for \`tsup.config.ts\` is stored in [\`src/steps/writing/creation/createTsupConfig.ts\`](../src/steps/writing/creation/createTsupConfig.ts).
-If the \`createTsupConfig\` function were to be modified without an equivalent change to \`tsup.config.ts\` -or vice-versa- then the migration test would report:
-
-\`\`\`plaintext
-Oh no! Running the migrate script unexpectedly modified:
- - tsup.config.ts
-\`\`\`"
`;

exports[`expected file changes > .github/workflows/test.yml 1`] = `
"--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ ... @@ jobs:
       - run: pnpm run test --coverage
       - name: Codecov
         uses: codecov/codecov-action@v3
-        with:
-          flags: unit
-      - if: always()
-        name: Archive code coverage results
-        uses: actions/upload-artifact@v4
-        with:
-          name: code-coverage-report
-          path: coverage
 
 name: Test
 "
`;

exports[`expected file changes > .gitignore 1`] = `
"--- a/.gitignore
+++ b/.gitignore
@@ ... @@
-coverage*/
+coverage/
 lib/
 node_modules/"
`;

exports[`expected file changes > .prettierignore 1`] = `
"--- a/.prettierignore
+++ b/.prettierignore
@@ ... @@
 .all-contributorsrc
-coverage*/
+coverage/
 lib/
 pnpm-lock.yaml"
`;

exports[`expected file changes > README.md 1`] = `
"--- a/README.md
+++ b/README.md
@@ ... @@
 
 <img align="right" alt="Project logo: the TypeScript blue square with rounded corners, but a plus sign instead of 'TS'" src="./create-typescript-app.png">
 
-\`create-typescript-app\` is a one-stop-shop solution to set up a new or existing repository with the latest and greatest TypeScript tooling.
-It includes options not just for building and testing but also GitHub repository templates, contributor recognition, automated release management, and more.
-
-## Getting Started
-
-First make sure you have the following installed:
-
-- [GitHub CLI](https://cli.github.com) _(you'll need to be logged in)_
-- [Node.js](https://nodejs.org)
-- [pnpm](https://pnpm.io)
-
-Then in an existing repository or in your directory where you'd like to make a new repository:
-
-\`\`\`shell
-npx create-typescript-app
-\`\`\`
-
-That setup script will walk you through using the template.
-You can read more about the supported setup modes in their docs pages:
-
-- [**Creating from the terminal**](./docs/Creation.md): creating a new repository locally on the command-line _(recommended)_
-- [**Initializing from the template**](./docs/Initialization.md): creating a new repository with the [_Use this template_](https://github.com/JoshuaKGoldberg/create-typescript-app/generate) button on GitHub
-- [**Migrating an existing repository**](./docs/Migration.md): adding this template's tooling on top of an existing repository
-
-## Documentation
-
-You can read more about \`create-typescript-app\` and the tooling it supports:
-
-1. [**Tooling**](./docs/Tooling.md): a breakdown of all the pieces this template can set up.
-2. [**Options**](./docs/Options.md): granular options to customize how the template is run.
-3. [**FAQs**](./docs/FAQs.md): frequently asked questions
-
-> [!NOTE]  
-> This template is early stage, opinionated, and not endorsed by the TypeScript team.
-> It can be configured to set up a _lot_ of tooling out of the box.
-> If you don't want to use any particular tool, you can always remove it manually.
-
 ## Development
 
 See [\`.github/CONTRIBUTING.md\`](./.github/CONTRIBUTING.md), then [\`.github/DEVELOPMENT.md\`](./.github/DEVELOPMENT.md).
@@ ... @@ Thanks! 💖
 
 <!-- ALL-CONTRIBUTORS-LIST:END -->
 <!-- spellchecker: enable -->
+
+<!-- You can remove this notice if you don't want it 🙂 no worries! -->
+
+> 💙 This package was templated with [\`create-typescript-app\`](https://github.com/JoshuaKGoldberg/create-typescript-app)."
`;

exports[`expected file changes > cspell.json 1`] = `
"--- a/cspell.json
+++ b/cspell.json
@@ ... @@
 {
 	"dictionaries": ["typescript"],
 	"ignorePaths": [
-		"./coverage*",
-		"./script/__snapshots__",
 		".github",
 		"CHANGELOG.md",
+		"coverage",
 		"lib",
 		"node_modules",
 		"pnpm-lock.yaml"
@@ ... @@
 		"contributorsrc",
 		"execa",
 		"infile",
+		"joshuakgoldberg",
 		"knip",
+		"markdownlint",
 		"markdownlintignore",
 		"mtfoley",
 		"npmignore",
@@ ... @@
 		"quickstart",
 		"tada",
 		"tsup",
-		"vitest"
+		"vitest",
+		"wontfix"
 	]
 }"
`;

exports[`expected file changes > knip.jsonc 1`] = `
"--- a/knip.jsonc
+++ b/knip.jsonc
@@ ... @@
 {
 	"$schema": "https://unpkg.com/knip@latest/schema.json",
-	"entry": ["src/index.ts!", "script/*e2e.js"],
-	"ignoreBinaries": ["gh"],
+	"entry": ["src/index.ts!"],
 	"ignoreExportsUsedInFile": { "interface": true, "type": true },
-	"project": ["src/**/*.ts!", "script/**/*.js"]
+	"project": ["src/**/*.ts!"]
 }"
`;

exports[`expected file changes > package.json 1`] = `
"--- a/package.json
+++ b/package.json
@@ ... @@
 	"scripts": {
 		"build": "tsup",
 		"format": "prettier \\"**/*\\" --ignore-unknown",
-		"initialize": "tsx ./bin/index.js --mode initialize",
 		"lint": "eslint . .*js --max-warnings 0",
 		"lint:knip": "knip",
 		"lint:md": "markdownlint \\"**/*.md\\" \\".github/**/*.md\\" --rules sentences-per-line",
@@ ... @@
 		"prepare": "husky install",
 		"should-semantic-release": "should-semantic-release --verbose",
 		"test": "vitest",
-		"test:create": "node script/create-test-e2e.js",
-		"test:initialize": "node script/initialize-test-e2e.js",
-		"test:migrate": "vitest run -r script/",
 		"tsc": "tsc"
 	},
 	"lint-staged": {"
`;
