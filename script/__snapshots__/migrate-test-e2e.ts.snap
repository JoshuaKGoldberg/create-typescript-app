// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`expected file changes > .github/renovate.json 1`] = `
"--- a/.github/renovate.json
+++ b/.github/renovate.json
@@ ... @@
 	"$schema": "https://docs.renovatebot.com/renovate-schema.json",
 	"automerge": true,
 	"extends": ["config:best-practices", "replacements:all"],
-	"github-actions": { "enabled": false },
 	"ignoreDeps": ["codecov/codecov-action"],
 	"labels": ["dependencies"],
 	"minimumReleaseAge": "7 days","
`;

exports[`expected file changes > .github/workflows/ci.yml 1`] = `
"--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ ... @@
 jobs:
-  are_the_types_wrong:
-    name: Are The Types Wrong?
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v4
-      - uses: ./.github/actions/prepare
-      - run: pnpm build
-      - run: npx --yes @arethetypeswrong/cli --pack . --ignore-rules cjs-resolves-to-esm
   build:
     name: Build
     runs-on: ubuntu-latest
@@ ... @@ jobs:
       - uses: actions/checkout@v4
       - uses: ./.github/actions/prepare
       - run: pnpm build
-      - run: node ./lib/index.js --version
+      - run: node ./lib/index.js
   lint:
     name: Lint
     runs-on: ubuntu-latest
@@ ... @@ jobs:
       - uses: actions/checkout@v4
       - uses: ./.github/actions/prepare
       - run: pnpm run test --coverage
-      - env:
-          CODECOV_TOKEN: \${{ secrets.CODECOV_TOKEN }}
-        if: always()
-        uses: codecov/codecov-action@v3
-        with:
-          flags: unit
-  test_creation_script:
-    name: Test Creation Script
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v4
-      - uses: ./.github/actions/prepare
-      - run: pnpm run build
-      - run: pnpm run test:create
-      - env:
-          CODECOV_TOKEN: \${{ secrets.CODECOV_TOKEN }}
-        if: always()
-        uses: codecov/codecov-action@v3
-        with:
-          files: coverage-create/lcov.info
-          flags: create
-  test_initialization_script:
-    name: Test Initialization Script
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v4
-      - uses: ./.github/actions/prepare
-      - run: pnpm run build
-      - run: pnpm run test:initialize
-      - env:
-          CODECOV_TOKEN: \${{ secrets.CODECOV_TOKEN }}
-        if: always()
-        uses: codecov/codecov-action@v3
-        with:
-          files: coverage-initialize/lcov.info
-          flags: initialize
-  test_migration_script:
-    name: Test Migration Script
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v4
-      - uses: ./.github/actions/prepare
-      - run: pnpm run build
-      - run: pnpm run test:migrate
-      - env:
-          CODECOV_TOKEN: \${{ secrets.CODECOV_TOKEN }}
-        if: always()
+      - if: always()
         uses: codecov/codecov-action@v3
-        with:
-          files: coverage-migrate/lcov.info
-          flags: migrate
   type_check:
     name: Type Check
     runs-on: ubuntu-latest"
`;

exports[`expected file changes > .gitignore 1`] = `
"--- a/.gitignore
+++ b/.gitignore
@@ ... @@
-/coverage*
+/coverage
 /lib
 /node_modules"
`;

exports[`expected file changes > .prettierignore 1`] = `
"--- a/.prettierignore
+++ b/.prettierignore
@@ ... @@
 /.all-contributorsrc
 /.husky
-/coverage*
+/coverage
 /lib
 /pnpm-lock.yaml"
`;

exports[`expected file changes > README.md 1`] = `
"--- a/README.md
+++ b/README.md
@@ ... @@
 <h1 align="center">Create TypeScript App</h1>
 
-<p align="center">Quickstart-friendly TypeScript template with comprehensive, configurable, opinionated tooling. ‚ù§Ô∏è‚Äçüî•</p>
+<p align="center">A very lovely package. Hooray!</p>
 
 <p align="center">
 	<!-- prettier-ignore-start -->
@@ ... @@ Thanks! üíñ
 
 <!-- ALL-CONTRIBUTORS-LIST:END -->
 <!-- spellchecker: enable -->
+
+<!-- You can remove this notice if you don't want it üôÇ no worries! -->
+
+> üíô This package was templated with [\`create-typescript-app\`](https://github.com/JoshuaKGoldberg/create-typescript-app)."
`;

exports[`expected file changes > eslint.config.js 1`] = `
"--- a/eslint.config.js
+++ b/eslint.config.js
@@ ... @@
-/*
-üëã Hi! This ESLint configuration contains a lot more stuff than many repos'!
-You can read from it to see all sorts of linting goodness, but don't worry -
-it's not something you need to exhaustively understand immediately. üíô
-
-If you're interested in learning more, see the 'getting started' docs on:
-- ESLint: https://eslint.org
-- typescript-eslint: https://typescript-eslint.io
-*/
-
 import comments from "@eslint-community/eslint-plugin-eslint-comments/configs";
 import eslint from "@eslint/js";
 import vitest from "@vitest/eslint-plugin";
@@ ... @@ import tseslint from "typescript-eslint";
 
 export default tseslint.config(
 	{
-		ignores: [
-			"**/*.snap",
-			"coverage*",
-			"lib",
-			"node_modules",
-			"pnpm-lock.yaml",
-		],
+		ignores: ["**/*.snap", "coverage", "lib", "node_modules", "pnpm-lock.yaml"],
 	},
 	{ linterOptions: { reportUnusedDisableDirectives: "error" } },
 	eslint.configs.recommended,
@@ ... @@ export default tseslint.config(
 		files: ["**/*.js", "**/*.ts"],
 		languageOptions: {
 			parserOptions: {
-				projectService: {
-					allowDefaultProject: ["*.config.*s", "bin/*.js"],
-				},
+				projectService: { allowDefaultProject: ["*.config.*s"] },
 				tsconfigRootDir: import.meta.dirname,
 			},
 		},
 		rules: {
-			// These on-by-default rules work well for this repo if configured
-			"@typescript-eslint/no-unnecessary-condition": [
-				"error",
-				{
-					allowConstantLoopConditions: true,
-				},
-			],
-			"@typescript-eslint/prefer-nullish-coalescing": [
-				"error",
-				{ ignorePrimitives: true },
-			],
-			"@typescript-eslint/restrict-template-expressions": [
-				"error",
-				{ allowBoolean: true, allowNullish: true, allowNumber: true },
-			],
-			"n/no-unsupported-features/node-builtins": [
-				"error",
-				{ allowExperimental: true },
-			],
-
 			// Stylistic concerns that don't interfere with Prettier
 			"logical-assignment-operators": [
 				"error",
@@ ... @@ export default tseslint.config(
 	{
 		extends: [tseslint.configs.disableTypeChecked],
 		files: ["**/*.md/*.ts"],
+		rules: {
+			"n/no-missing-import": [
+				"error",
+				{ allowModules: ["create-typescript-app"] },
+			],
+		},
 	},
 	{
 		extends: [vitest.configs.recommended],"
`;

exports[`expected file changes > knip.json 1`] = `
"--- a/knip.json
+++ b/knip.json
@@ ... @@
 {
 	"$schema": "https://unpkg.com/knip@5.41.1/schema.json",
-	"entry": ["script/*e2e.js", "src/index.ts!", "src/**/*.test.*"],
-	"ignoreDependencies": ["all-contributors-cli", "cspell-populate-words"],
+	"entry": ["src/index.ts!"],
 	"ignoreExportsUsedInFile": { "interface": true, "type": true },
-	"project": ["src/**/*.ts!", "script/**/*.js"]
+	"project": ["src/**/*.ts!"]
 }"
`;

exports[`expected file changes > package.json 1`] = `
"--- a/package.json
+++ b/package.json
@@ ... @@
 {
 	"name": "create-typescript-app",
 	"version": "1.78.0",
-	"description": "Quickstart-friendly TypeScript template with comprehensive, configurable, opinionated tooling. ‚ù§Ô∏è‚Äçüî•",
+	"description": "A very lovely package. Hooray!",
 	"repository": {
 		"type": "git",
 		"url": "https://github.com/JoshuaKGoldberg/create-typescript-app"
@@ ... @@
 		"lint-staged": "15.2.11",
 		"markdownlint": "0.37.2",
 		"markdownlint-cli": "0.43.0",
+		"prettier": "^3.4.2",
 		"prettier-plugin-curly": "0.3.1",
 		"prettier-plugin-packagejson": "2.5.6",
 		"prettier-plugin-sh": "0.14.0","
`;

exports[`expected file changes > tsconfig.json 1`] = `
"--- a/tsconfig.json
+++ b/tsconfig.json
@@ ... @@
 		"strict": true,
 		"target": "ES2022"
 	},
-	"include": ["src", "script"]
+	"include": ["src"]
 }"
`;
