// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`expected file changes > .github/workflows/ci.yml 1`] = `
"--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ ... @@ jobs:
       - uses: ./.github/actions/prepare
       - run: pnpm run test --coverage
       - uses: codecov/codecov-action@v3
-        with:
-          flags: unit
   type_check:
     name: Type Check
     runs-on: ubuntu-latest"
`;

exports[`expected file changes > .gitignore 1`] = `
"--- a/.gitignore
+++ b/.gitignore
@@ ... @@
-coverage*/
+coverage/
 lib/
 node_modules/"
`;

exports[`expected file changes > .prettierignore 1`] = `
"--- a/.prettierignore
+++ b/.prettierignore
@@ ... @@
 .all-contributorsrc
 .husky/
-coverage*/
+coverage/
 lib/
 pnpm-lock.yaml"
`;

exports[`expected file changes > README.md 1`] = `
"--- a/README.md
+++ b/README.md
@@ ... @@ Thanks! ðŸ’–
 
 <!-- ALL-CONTRIBUTORS-LIST:END -->
 <!-- spellchecker: enable -->
+
+<!-- You can remove this notice if you don't want it ðŸ™‚ no worries! -->
+
+> ðŸ’™ This package was templated with [\`create-typescript-app\`](https://github.com/JoshuaKGoldberg/create-typescript-app)."
`;

exports[`expected file changes > cspell.json 1`] = `
"--- a/cspell.json
+++ b/cspell.json
@@ ... @@
 {
 	"dictionaries": ["typescript"],
 	"ignorePaths": [
-		"./coverage*",
-		"./script/__snapshots__",
 		".github",
 		"CHANGELOG.md",
+		"coverage",
 		"lib",
 		"node_modules",
 		"pnpm-lock.yaml"
@@ ... @@
 		"apexskier",
 		"arethetypeswrong",
 		"automerge",
-		"codecov",
 		"codespace",
 		"contributorsrc",
 		"execa",
 		"infile",
+		"joshuakgoldberg",
 		"knip",
+		"markdownlint",
 		"markdownlintignore",
 		"mtfoley",
 		"npmignore",
 		"npmpackagejsonlintrc",
 		"outro",
 		"packagejson",
-		"precommit",
 		"quickstart",
 		"tada",
 		"tseslint",
 		"tsup",
-		"vitest"
+		"vitest",
+		"wontfix"
 	]
 }"
`;

exports[`expected file changes > eslint.config.js 1`] = `
"--- a/eslint.config.js
+++ b/eslint.config.js
@@ ... @@
-/*
-ðŸ‘‹ Hi! This ESLint configuration contains a lot more stuff than many repos'!
-You can read from it to see all sorts of linting goodness, but don't worry -
-it's not something you need to exhaustively understand immediately. ðŸ’™
-
-If you're interested in learning more, see the 'getting started' docs on:
-- ESLint: https://eslint.org
-- typescript-eslint: https://typescript-eslint.io
-*/
-
 import eslint from "@eslint/js";
 import comments from "@eslint-community/eslint-plugin-eslint-comments/configs";
 import vitest from "@vitest/eslint-plugin";
@@ ... @@ export default tseslint.config(
 		languageOptions: {
 			parserOptions: {
 				projectService: {
-					allowDefaultProject: ["*.config.*s", "bin/*.js", "script/*.ts"],
+					allowDefaultProject: ["*.*s", "eslint.config.js"],
 					defaultProject: "./tsconfig.json",
 				},
 				tsconfigRootDir: import.meta.dirname,
@@ ... @@ export default tseslint.config(
 			"no-constant-condition": "off",
 
 			// These on-by-default rules work well for this repo if configured
-			"@typescript-eslint/no-unnecessary-condition": [
-				"error",
-				{
-					allowConstantLoopConditions: true,
-				},
-			],
 			"@typescript-eslint/no-unused-vars": ["error", { caughtErrors: "all" }],
-			"@typescript-eslint/prefer-nullish-coalescing": [
-				"error",
-				{ ignorePrimitives: true },
-			],
-			"@typescript-eslint/restrict-template-expressions": [
-				"error",
-				{ allowBoolean: true, allowNullish: true, allowNumber: true },
-			],
 			"n/no-unsupported-features/node-builtins": [
 				"error",
 				{ allowExperimental: true },"
`;

exports[`expected file changes > knip.json 1`] = `
"--- a/knip.json
+++ b/knip.json
@@ ... @@
 {
 	"$schema": "https://unpkg.com/knip@latest/schema.json",
-	"entry": ["src/index.ts!", "script/*e2e.js"],
+	"entry": ["src/index.ts!"],
 	"ignoreExportsUsedInFile": { "interface": true, "type": true },
-	"project": ["src/**/*.ts!", "script/**/*.js"]
+	"project": ["src/**/*.ts!"]
 }"
`;
